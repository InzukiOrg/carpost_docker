version: '3.8'

services:
  postgres:
    image: postgres:17
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - carpost_net

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    command: ["start-dev", "--http-port=8280", "--import-realm"]
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      DB_VENDOR: postgres
      DB_ADDR: postgres
      DB_DATABASE: mydb
      DB_USER: admin
      DB_PASSWORD: admin
    volumes:
      - ./keycloak/realms:/opt/keycloak/data/import
    ports:
      - "8280:8280"
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8280"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - carpost_net

  java-app:
    build:
      context: ./carpost_back
      dockerfile: Dockerfile
    container_name: java-app
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/mydb
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://keycloak:8280/realms/carpostoriginal
    ports:
      - "8081:8081"
    depends_on:
      - postgres
      - keycloak
    networks:
      - carpost_net

  vue-app:
    build:
      context: ./carpost_front
      dockerfile: Dockerfile
    container_name: vue-app
    ports:
      - "3000:80"
    networks:
      - carpost_net

volumes:
  postgres_data:

networks:
  carpost_net:
    driver: bridge
